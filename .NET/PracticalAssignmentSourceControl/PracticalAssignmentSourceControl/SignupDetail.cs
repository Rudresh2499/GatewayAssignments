//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PracticalAssignmentSourceControl
{
    using PracticalAssignmentSourceControl.CustomValidation;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web;

    public partial class SignupDetail
    {
        public int Id { get; set; }

        [Required]
        [StringLength(50, ErrorMessage = "First Name must be less than 50 characters")]
        [Display(Name = "First Name")]
        public string FirstName { get; set; }

        [Required]
        [StringLength(50, ErrorMessage = "Last Name must be less than 50 characters")]
        [Display(Name = "Last Name")]
        public string LastName { get; set; }

        [Required]
        [EmailAddress]
        [Display(Name = "Email Address")]
        public string EmailId { get; set; }

        [Required]
        [RegularExpression(@"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{10,20}$", ErrorMessage = "Password must be at least 10 characters long and a combination of uppercase, lowercase letters, digits and special characters")]
        [Display(Name = "Password")]
        [DataType(DataType.Password)]
        public string Password { get; set; }

        [Required]
        [Range(21,65,ErrorMessage = "Age of the Portfolio Creator must be between 18 years to 65 years")]
        [Display(Name = "Age")]
        public int Age { get; set; }

        public int ImageId { get; set; }

        [Required]
        [MinLength(10, ErrorMessage = "Phone Number must be 10 digits long without country code")]
        [Display(Name = "Phone Number")]
        public string Phone { get; set; }

        [Required]
        [Display(Name = "Hiring Date")]
        [DataType(DataType.Date)]
        [DateValidation(ErrorMessage = "Hiring Date must be less than or equal to today's date")]
        public System.DateTime HiringDate { get; set; }

        [Required]
        public HttpPostedFileBase ImageFile { get; set; }
    
        public virtual ImageDetail ImageDetail { get; set; }
    }
}
